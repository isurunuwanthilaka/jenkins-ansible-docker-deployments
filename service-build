def source = "default"

pipeline {
    agent any
    
    tools{
        maven 'maven'
    }
    
    parameters { 
        choice(name: 'SERVICE', choices: ['hello1', 'hello2'], description: 'Service name') 
        string(name: 'BRANCH', defaultValue: 'main', description: 'Source code branch')
        string(name: 'TAG', defaultValue: 'dev', description: 'Docker image tag')
        choice(name: 'DEPLOY_TO', choices: ['dev1', 'dev2'], description: 'Docker container deployment environment')
        string(name: 'REGISTRY', defaultValue: '<ip>:5000', description: 'Docker image repository IP:PORT')
    }

    stages {
        stage('Clone') {
            steps {
                script{
                    if (params.SERVICE == 'hello1') {
                        source = "hello-world1"
                    } else if (params.SERVICE == 'hello2') {
                        source = "hello-world2"
                    }else{
                        source = "hello-world1"
                    }
                }
                git branch: "${params.BRANCH}" , credentialsId: 'bitbucket', url: "https://isurunuwanthilaka@bitbucket.org/isurunuwanthilaka/${source}"
                
            }
        }
        
        stage('Maven Build') {
            steps {
                sh "mvn clean package"
                
            }
        }
        
        stage('Docker Build') {
            steps {
                sh "docker build -t ${params.REGISTRY}/${params.SERVICE}:${params.TAG} ./"
                
            }
        }
        
        stage('Docker Push') {
            steps {
                sh "docker push ${params.REGISTRY}/${params.SERVICE}:${params.TAG}"
            }
        }
        
        stage('Clean') {
            steps {
                sh "docker image rm -f ${params.REGISTRY}/${params.SERVICE}:${params.TAG}"
                sh "docker system prune -f"
                
            }
        }
        
        stage("Trigger Pipelines") {
            steps {
                build job: 'Service-Deployment', parameters: [string(name: 'SERVICE', value: "${params.SERVICE}"),string(name: 'TAG', value: "${params.TAG}"),string(name: 'DEPLOY_TO', value: "${params.DEPLOY_TO}")]
            }
        }
    }
}
